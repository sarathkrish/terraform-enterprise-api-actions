// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { __awaiter, __generator } from "tslib";
import { env } from "@azure/test-utils-recorder";
import * as assert from "assert";
// Async iterator's polyfill for Node 8
if (!Symbol || !Symbol.asyncIterator) {
    Symbol.asyncIterator = Symbol.for("Symbol.asyncIterator");
}
export function getKeyvaultName() {
    var keyVaultEnvVarName = "KEYVAULT_NAME";
    var keyVaultName = env[keyVaultEnvVarName];
    if (!keyVaultName) {
        throw new Error(keyVaultEnvVarName + " environment variable not specified.");
    }
    return keyVaultName;
}
export function assertThrowsAbortError(cb) {
    return __awaiter(this, void 0, void 0, function () {
        var passed, e_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    passed = false;
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, cb()];
                case 2:
                    _a.sent();
                    passed = true;
                    return [3 /*break*/, 4];
                case 3:
                    e_1 = _a.sent();
                    console.log("name: " + e_1.name + ", message: " + e_1.message);
                    assert.equal(e_1.name, "AbortError");
                    assert.equal(e_1.message, "The operation was aborted.");
                    return [3 /*break*/, 4];
                case 4:
                    if (passed) {
                        throw new Error("Expected cb to throw an AbortError");
                    }
                    return [2 /*return*/];
            }
        });
    });
}
//# sourceMappingURL=utils.common.js.map