/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __extends } from "tslib";
import * as coreHttp from "@azure/core-http";
var packageName = "@azure/keyvault-secrets";
var packageVersion = "4.0.2";
var KeyVaultClientContext = /** @class */ (function (_super) {
    __extends(KeyVaultClientContext, _super);
    /**
     * Initializes a new instance of the KeyVaultClientContext class.
     * @param apiVersion Client API version.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param [options] The parameter options
     */
    function KeyVaultClientContext(credentials, apiVersion, options) {
        var _this = this;
        if (apiVersion == undefined) {
            throw new Error("'apiVersion' cannot be null.");
        }
        if (credentials == undefined) {
            throw new Error("'credentials' cannot be null.");
        }
        if (!options) {
            options = {};
        }
        if (!options.userAgent) {
            var defaultUserAgent = coreHttp.getDefaultUserAgentValue();
            options.userAgent = packageName + "/" + packageVersion + " " + defaultUserAgent;
        }
        _this = _super.call(this, credentials, options) || this;
        _this.baseUri = "{vaultBaseUrl}";
        _this.requestContentType = "application/json; charset=utf-8";
        _this.apiVersion = apiVersion;
        _this.credentials = credentials;
        return _this;
    }
    return KeyVaultClientContext;
}(coreHttp.ServiceClient));
export { KeyVaultClientContext };
//# sourceMappingURL=keyVaultClientContext.js.map